#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart/
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
identifier = cyan
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
apostrophe.arguments = "prettype_before"
apostrophe.command = ""
apostrophe.conditions = ""
apostrophe.enabled = on
apostrophe.hook = modifier
apostrophe.post_action = none
apostrophe.regex = "/è/é/tg_string /È/É/tg_string"
apostrophe.return_code = ok
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && ${tg_tags} !!- ,notify_none, && (${tg_highlight} || ${tg_msg_pv}) && ${buffer.notify} > 0"
beep.enabled = off
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
block_ctcp.arguments = "irc_in_privmsg"
block_ctcp.command = ""
block_ctcp.conditions = "${arguments} =~ ^[^ ]+ :${\x01}.*${\x01}$ && ${arguments} !~ ^[^ ]+ :${\x01}ACTION"
block_ctcp.enabled = on
block_ctcp.hook = modifier
block_ctcp.post_action = none
block_ctcp.regex = "/.*//"
block_ctcp.return_code = ok
chanmon_like.arguments = "*;irc_privmsg"
chanmon_like.command = "/print -newbuffer chanmon -tags ${tg_tags} ${cutscr:6,${color:${weechat.color.chat_prefix_more}}${weechat.look.prefix_buffer_align_more},${color:${info:nick_color_name,${server}}}${server}}${color:${info:nick_color_name,${channel}}}${channel}\t${if:${tg_tags} !~ ,irc_action,?${weechat.look.quote_nick_prefix}${tg_prefix}${color:reset}${weechat.look.quote_nick_suffix}:${tg_prefix}${color:reset}} ${color:.gray}${tg_message}"
chanmon_like.conditions = "${buffer.local_variables.type} == channel && ${buffer.full_name} !~ ^irc.libera.(##news|#italy)$"
chanmon_like.enabled = on
chanmon_like.hook = print
chanmon_like.post_action = none
chanmon_like.regex = ""
chanmon_like.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "s==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+|setpass +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "s==^(/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
cmd_pass_register.return_code = ok
colorize_line_highlight.arguments = "*"
colorize_line_highlight.command = ""
colorize_line_highlight.conditions = "${highlight}"
colorize_line_highlight.enabled = off
colorize_line_highlight.hook = line
colorize_line_highlight.post_action = none
colorize_line_highlight.regex = "/.*/${color:blue,${weechat.color.chat_highlight_bg}}${re:0}/message"
colorize_line_highlight.return_code = ok
complete_last_nick.arguments = "/input complete_next"
complete_last_nick.command = "/input insert ${last_nick}"
complete_last_nick.conditions = "${type} == channel && ${buffer.input_buffer_length} == 0 && ${last_nick}"
complete_last_nick.enabled = on
complete_last_nick.hook = command_run
complete_last_nick.post_action = none
complete_last_nick.regex = ""
complete_last_nick.return_code = ok
delete_time.arguments = "*;core.chanmon"
delete_time.command = ""
delete_time.conditions = "${tags} =~ ,irc_time,"
delete_time.enabled = on
delete_time.hook = line
delete_time.post_action = none
delete_time.regex = "/.*//buffer_name"
delete_time.return_code = ok
delete_topic.arguments = "*;irc.libera.#linux-it"
delete_topic.command = ""
delete_topic.conditions = "${tags} =~ ,irc_topic,"
delete_topic.enabled = on
delete_topic.hook = line
delete_topic.post_action = none
delete_topic.regex = "/.*//buffer_name"
delete_topic.return_code = ok
dot_space.arguments = "input_text_for_buffer"
dot_space.command = ""
dot_space.conditions = "${tg_string} !~ ^/"
dot_space.enabled = on
dot_space.hook = modifier
dot_space.post_action = none
dot_space.regex = "/[\ +$][\.]/${re:1}.${re:2}/"
dot_space.return_code = ok
escla_space.arguments = "input_text_for_buffer"
escla_space.command = ""
escla_space.conditions = "${tg_string} !~ ^/"
escla_space.enabled = on
escla_space.hook = modifier
escla_space.post_action = none
escla_space.regex = "/[\ +$][\!]/${re:1}!${re:2}/"
escla_space.return_code = ok
force_redraw.arguments = "window_switch;buffer_switch"
force_redraw.command = "/wait 10ms /redraw"
force_redraw.conditions = ""
force_redraw.enabled = off
force_redraw.hook = signal
force_redraw.post_action = none
force_redraw.regex = ""
force_redraw.return_code = ok
highmon_like.arguments = "*;irc_privmsg"
highmon_like.command = "/print -newbuffer highmon -tags ${tg_tags} ${cutscr:6,${color:${weechat.color.chat_prefix_more}}${weechat.look.prefix_buffer_align_more},${color:${info:nick_color_name,${server}}}${server}}${color:${info:nick_color_name,${channel}}}${channel}\t${if:${tg_tags} !~ ,irc_action,?${weechat.look.quote_nick_prefix}${tg_prefix}${color:reset}${weechat.look.quote_nick_suffix}:${tg_prefix}${color:reset}} ${color:.gray}${tg_message}"
highmon_like.conditions = "${tg_highlight} == 1 && ${tg_displayed} == 1 && ${buffer.local_variables.type} == channel"
highmon_like.enabled = on
highmon_like.hook = print
highmon_like.post_action = none
highmon_like.regex = ""
highmon_like.return_code = ok
inter_space.arguments = "input_text_for_buffer"
inter_space.command = ""
inter_space.conditions = "${tg_string} !~ ^/"
inter_space.enabled = on
inter_space.hook = modifier
inter_space.post_action = none
inter_space.regex = "/[\ +$][\?]/${re:1}?${re:2}/"
inter_space.return_code = ok
last_nick.arguments = "irc.*;notify_message"
last_nick.command = "/buffer set localvar_set_last_nick ${tg_tag_nick}"
last_nick.conditions = "${tg_displayed} && ${type} == channel && ${tg_tag_nick} != ${nick}"
last_nick.enabled = on
last_nick.hook = print
last_nick.post_action = none
last_nick.regex = ""
last_nick.return_code = ok
mon_cut.arguments = "weechat_print"
mon_cut.command = ""
mon_cut.conditions = "${buffer.full_name} =~ ^core.(highmon|chanmon)$"
mon_cut.enabled = on
mon_cut.hook = modifier
mon_cut.post_action = none
mon_cut.regex = "/^([^\t]*)\t(.*)$/${cutscr:10,+,${re:1}}\t${re:2}/"
mon_cut.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "s==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
nick_cut.arguments = "weechat_print"
nick_cut.command = ""
nick_cut.conditions = "${buffer.full_name} !~ ^irc.libera.(#italy)|^core.(highmon|chanmon)$"
nick_cut.enabled = on
nick_cut.hook = modifier
nick_cut.post_action = none
nick_cut.regex = "/^([^\t]*)\t(.*)$/${cutscr:8,+,${re:1}}\t${re:2}/"
nick_cut.return_code = ok
nullpointer.arguments = "nullpointer"
nullpointer.command = "/command -buffer ${buffer.full_name} core /input delete_line;/command -buffer ${buffer.full_name} core /input insert ${out}"
nullpointer.conditions = ""
nullpointer.enabled = on
nullpointer.hook = hsignal
nullpointer.post_action = none
nullpointer.regex = "/\n//out"
nullpointer.return_code = ok
numberjump.arguments = "2000|input_text_for_buffer"
numberjump.command = ""
numberjump.conditions = "${tg_string} =~ ^/[0-9]+$"
numberjump.enabled = on
numberjump.hook = modifier
numberjump.post_action = none
numberjump.regex = "=\/([0-9]+)=/buffer *${re:1}="
numberjump.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "s==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
unwanted_msg.arguments = "input_text_for_buffer"
unwanted_msg.command = "/print -current -tags no_log unwanted message deleted:${tg_string_nocolor}"
unwanted_msg.conditions = "${tg_string} =~ ^\s+(/|.|,)"
unwanted_msg.enabled = on
unwanted_msg.hook = modifier
unwanted_msg.post_action = none
unwanted_msg.regex = "/.*//"
unwanted_msg.return_code = ok
virgo_space.arguments = "input_text_for_buffer"
virgo_space.command = ""
virgo_space.conditions = "${tg_string} !~ ^/"
virgo_space.enabled = on
virgo_space.hook = modifier
virgo_space.post_action = none
virgo_space.regex = "/[\ +$][\,]/${re:1},${re:2}/"
virgo_space.return_code = ok
whois_on_query.arguments = "irc_pv_opened"
whois_on_query.command = "/command -buffer ${buffer[${tg_signal_data}].full_name} * wii ${buffer[${tg_signal_data}].local_variables.channel}"
whois_on_query.conditions = ""
whois_on_query.enabled = on
whois_on_query.hook = signal
whois_on_query.post_action = none
whois_on_query.regex = ""
whois_on_query.return_code = ok
